{"version":3,"sources":["routes/Users.js","routes/Orders.js","components/MaterialUiBased/MediaCard.js","components/MaterialUiBased/BasicForm.js","components/Forms/CustomerForm.js","components/Forms/CustomerAdressForm.js","components/Forms/CustomerCreditCardForm.js","components/Forms/ProductForm.js","components/Forms/OrderForm.js","routes/Panel.js","routes/Home.js","components/MaterialUiBased/MiniDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["Users","Orders","useStyles","makeStyles","root","content","display","justifyContent","MediaCard","title","icon","form","classes","Card","className","CardActionArea","CardContent","Typography","gutterBottom","variant","component","CardActions","BasicForm","ApiCallRoute","fields","validateFunc","initialValsObj","initialValues","validate","onSubmit","values","setSubmitting","setTimeout","endpoint","request","JSON","stringify","axios","post","then","response","console","log","submitForm","isSubmitting","style","flexDirection","flexWrap","gap","map","field","LinearProgress","Button","color","disabled","onClick","CustomerForm","TextField","name","type","label","required","errors","surname","rating","tel","FK_CustomerID","CustomerAdressForm","country","city","state","street","houseNumber","flatNumber","CustomerCreditCardForm","cardName","cardSurname","cardNo","cardExpM","cardExpY","cardCvv","ProductForm","multiline","rows","rowsMax","price","description","length","url","likes","OrderForm","FK_ProductID","FK_OrderID","orderedAt","eta","volweight","orderStatus","shipmentStatus","Panel","Grid","container","spacing","direction","justify","xs","sm","item","fontSize","Home","drawerWidth","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","padding","mixins","flexGrow","topbar","MiniDrawer","children","links","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Link","to","endIcon","Drawer","paper","List","text","idx","ListItem","button","ListItemIcon","ListItemText","primary","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4abfcf51.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Users() {\r\n  return <div>users</div>;\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nfunction Orders() {\r\n  return <div>orders</div>;\r\n}\r\n\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  content: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default function MediaCard({ title, icon, form }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea className={classes.content}>\r\n        {icon}\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className={classes.content}>{form}</CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\n\r\nfunction BasicForm({ ApiCallRoute, fields, validateFunc, initialValsObj }) {\r\n  //Api Call On Submit\r\n  const ApiPostCall = (endpoint, request) => {\r\n    axios\r\n      .post(endpoint, {\r\n        request,\r\n      })\r\n      .then((response) => {\r\n        console.log(`Got Response:${response}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValsObj}\r\n      validate={validateFunc}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n          ApiPostCall(\r\n            `/api/insert/${ApiCallRoute}`,\r\n            JSON.stringify(values, null, 2)\r\n          );\r\n        }, 500);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => (\r\n        <Form\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"wrap\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          {fields.map((field) => field)}\r\n          {isSubmitting && <LinearProgress />}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={isSubmitting}\r\n            onClick={submitForm}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default BasicForm;\r\n","import React from \"react\";\r\nimport BasicForm from \"../MaterialUiBased/BasicForm\";\r\nimport { Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nfunction CustomerForm() {\r\n  const fields = [\r\n    <Field\r\n      component={TextField}\r\n      name=\"name\"\r\n      type=\"text\"\r\n      label=\"Name\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"text\"\r\n      label=\"Surname\"\r\n      name=\"surname\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"Rating\"\r\n      variant=\"outlined\"\r\n      name=\"rating\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"FK_CustomerID\"\r\n      type=\"number\"\r\n      label=\"Customer ID\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"tel\"\r\n      label=\"Telephone\"\r\n      name=\"tel\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n  ];\r\n\r\n  const validateFunc = (values) => {\r\n    const errors = {};\r\n    if (!values.name) errors.name = \"Required\";\r\n    if (!values.surname) errors.surname = \"Required\";\r\n    if (values.rating < 0 || values.rating > 10.0)\r\n      errors.rating = \"Rating cannot be negative or greater than 10\";\r\n    if (!values.tel) errors.tel = \"Required\";\r\n    if (!values.FK_CustomerID) errors.FK_CustomerID = \"Required\";\r\n    return errors;\r\n  };\r\n\r\n  const initialVals = {\r\n    name: \"\",\r\n    surname: \"\",\r\n    rating: \"\",\r\n    FK_CustomerID: \"\",\r\n    tel: \"+90\",\r\n  };\r\n\r\n  return (\r\n    <BasicForm\r\n      ApiCallRoute=\"customer\"\r\n      fields={fields}\r\n      validateFunc={validateFunc}\r\n      initialValsObj={initialVals}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CustomerForm;\r\n","import React from \"react\";\r\nimport BasicForm from \"../MaterialUiBased/BasicForm\";\r\nimport { Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nfunction CustomerAdressForm() {\r\n  const fields = [\r\n    <Field\r\n      component={TextField}\r\n      name=\"FK_CustomerID\"\r\n      type=\"number\"\r\n      label=\"Customer ID\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"country\"\r\n      label=\"Country\"\r\n      name=\"country\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"city\"\r\n      label=\"City\"\r\n      name=\"city\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"state\"\r\n      label=\"State\"\r\n      name=\"state\"\r\n      variant=\"outlined\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"street\"\r\n      label=\"Street\"\r\n      name=\"street\"\r\n      variant=\"outlined\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"House Number\"\r\n      name=\"houseNumber\"\r\n      variant=\"outlined\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"Flat Number\"\r\n      name=\"flatNumber\"\r\n      variant=\"outlined\"\r\n    />,\r\n  ];\r\n\r\n  const validateFunc = (values) => {\r\n    const errors = {};\r\n    if (!values.FK_CustomerID) errors.FK_CustomerID = \"Required\";\r\n    if (!values.country) errors.country = \"Required\";\r\n    if (!values.city) errors.city = \"Required\";\r\n    return errors;\r\n  };\r\n\r\n  const initialVals = {\r\n    FK_CustomerID: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    street: \"\",\r\n    houseNumber: \"\",\r\n    flatNumber: \"\",\r\n  };\r\n\r\n  return (\r\n    <BasicForm\r\n      ApiCallRoute=\"customeradress\"\r\n      fields={fields}\r\n      validateFunc={validateFunc}\r\n      initialValsObj={initialVals}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CustomerAdressForm;\r\n","import React from \"react\";\r\nimport BasicForm from \"../MaterialUiBased/BasicForm\";\r\nimport { Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nfunction CustomerCreditCardForm() {\r\n  const fields = [\r\n    <Field\r\n      component={TextField}\r\n      name=\"FK_CustomerID\"\r\n      type=\"number\"\r\n      label=\"Customer ID\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"text\"\r\n      label=\"Card Holder Name\"\r\n      name=\"cardName\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"text\"\r\n      label=\"Card Holder Surname\"\r\n      name=\"cardSurname\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"text\"\r\n      label=\"Card Number\"\r\n      name=\"cardNo\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"Expiration Month\"\r\n      variant=\"outlined\"\r\n      name=\"cardExpM\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"Expiration Year\"\r\n      variant=\"outlined\"\r\n      name=\"cardExpY\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"CVV\"\r\n      variant=\"outlined\"\r\n      name=\"cardCvv\"\r\n      required\r\n    />,\r\n  ];\r\n\r\n  const validateFunc = (values) => {\r\n    const errors = {};\r\n    if (!values.FK_CustomerID) errors.FK_CustomerID = \"Required\";\r\n    if (!values.cardName) errors.cardName = \"Required\";\r\n    if (!values.cardSurname) errors.cardSurname = \"Required\";\r\n    if (!values.cardNo) {\r\n      errors.cardNo = \"Required\";\r\n    }\r\n    if (!values.cardExpM) {\r\n      errors.cardExpM = \"Required\";\r\n    } else if (values.cardExpM < 1 || values.cardExpM > 12) {\r\n      errors.cardNo = \"Invalid Expiration Month\";\r\n    }\r\n    if (!values.cardExpY) {\r\n      errors.cardExpY = \"Required\";\r\n    } else if (values.cardExpY < 20 || values.cardExpY > 99) {\r\n      errors.cardNo = \"Invalid Expiration Year\";\r\n    }\r\n    if (!values.cardCvv) {\r\n      errors.cardCvv = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const initialVals = {\r\n    FK_CustomerID: \"\",\r\n    cardName: \"\",\r\n    cardSurname: \"\",\r\n    cardNo: \"\",\r\n    cardExpM: 12,\r\n    cardExpY: 20,\r\n    cardCvv: 123,\r\n  };\r\n\r\n  return (\r\n    <BasicForm\r\n      ApiCallRoute=\"paymentinfo\"\r\n      fields={fields}\r\n      validateFunc={validateFunc}\r\n      initialValsObj={initialVals}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CustomerCreditCardForm;\r\n","import React from \"react\";\r\nimport BasicForm from \"../MaterialUiBased/BasicForm\";\r\nimport { Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nfunction ProductForm() {\r\n  const fields = [\r\n    <Field\r\n      component={TextField}\r\n      name=\"name\"\r\n      type=\"text\"\r\n      label=\"Name\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"Price\"\r\n      name=\"price\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"url\"\r\n      label=\"ImageUrl\"\r\n      variant=\"outlined\"\r\n      name=\"url\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"text\"\r\n      label=\"Description\"\r\n      name=\"description\"\r\n      multiline\r\n      variant=\"outlined\"\r\n      rows={4}\r\n      rowsMax={8}\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      type=\"number\"\r\n      label=\"Likes\"\r\n      variant=\"outlined\"\r\n      name=\"likes\"\r\n    />,\r\n  ];\r\n\r\n  const validateFunc = (values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = \"Required\";\r\n    }\r\n    if (!values.price) {\r\n      errors.price = \"Required\";\r\n    }\r\n    if (values.price < 0 || values.rating > 1000000) {\r\n      errors.price = \"Price cannot be negative or greater than 1 million\";\r\n    }\r\n    if (values.description.length > 255) {\r\n      errors.description =\r\n        \"Description cannot be longer than 255 characters. Go Thank twitter ;D\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const initialVals = {\r\n    name: \"\",\r\n    price: \"\",\r\n    url: \"\",\r\n    description: \"\",\r\n    likes: \"\",\r\n  };\r\n\r\n  return (\r\n    <BasicForm\r\n      ApiCallRoute=\"product\"\r\n      fields={fields}\r\n      validateFunc={validateFunc}\r\n      initialValsObj={initialVals}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n","import React from \"react\";\r\nimport BasicForm from \"../MaterialUiBased/BasicForm\";\r\nimport { Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nfunction OrderForm() {\r\n  const fields = [\r\n    <Field\r\n      component={TextField}\r\n      name=\"FK_CustomerID\"\r\n      type=\"number\"\r\n      label=\"Customer ID\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"FK_ProductID\"\r\n      type=\"number\"\r\n      label=\"Product ID\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"orderedAt\"\r\n      type=\"date\"\r\n      label=\"Order Date\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"FK_OrderID\"\r\n      type=\"number\"\r\n      label=\"Order ID\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"orderStatus\"\r\n      type=\"text\"\r\n      label=\"Order Status\"\r\n      variant=\"outlined\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"eta\"\r\n      type=\"date\"\r\n      label=\"Estimated Delivery Date\"\r\n      variant=\"outlined\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"shipmentStatus\"\r\n      type=\"text\"\r\n      label=\"Shipment Status\"\r\n      variant=\"outlined\"\r\n    />,\r\n    <Field\r\n      component={TextField}\r\n      name=\"volweight\"\r\n      type=\"number\"\r\n      label=\"Volumetric Weight\"\r\n      variant=\"outlined\"\r\n      required\r\n    />,\r\n  ];\r\n\r\n  const validateFunc = (values) => {\r\n    const errors = {};\r\n    if (!values.FK_CustomerID) errors.FK_CustomerID = \"Required\";\r\n    if (!values.FK_ProductID) errors.FK_ProductID = \"Required\";\r\n    if (!values.FK_OrderID) errors.FK_OrderID = \"Required\";\r\n    if (!values.orderedAt) errors.orderedAt = \"Required\";\r\n    if (values.orderedAt > values.eta) errors.eta = \"Delivery date is invalid\";\r\n    if (!values.volweight) errors.volweight = \"Required\";\r\n\r\n    return errors;\r\n  };\r\n\r\n  const initialVals = {\r\n    FK_CustomerID: \"\",\r\n    FK_ProductID: \"\",\r\n    orderedAt: \"2020-01-01\",\r\n    orderStatus: \"placed\",\r\n    FK_OrderID: \"\",\r\n    shipmentStatus: \"waiting\",\r\n    eta: \"2020-01-01\",\r\n    volweight: 0,\r\n  };\r\n\r\n  return (\r\n    <BasicForm\r\n      ApiCallRoute=\"order\"\r\n      fields={fields}\r\n      validateFunc={validateFunc}\r\n      initialValsObj={initialVals}\r\n    />\r\n  );\r\n}\r\n\r\nexport default OrderForm;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MediaCard from \"../components/MaterialUiBased/MediaCard\";\r\nimport CustomerForm from \"../components/Forms/CustomerForm\";\r\nimport AdressForm from \"../components/Forms/CustomerAdressForm\";\r\nimport CreditCardForm from \"../components/Forms/CustomerCreditCardForm\";\r\nimport ProductForm from \"../components/Forms/ProductForm\";\r\nimport OrderForm from \"../components/Forms/OrderForm\";\r\nimport Product from \"@material-ui/icons/Create\";\r\nimport User from \"@material-ui/icons/Person\";\r\nimport Order from \"@material-ui/icons/MonetizationOn\";\r\nimport Adress from \"@material-ui/icons/LocationCity\";\r\nimport CreditCard from \"@material-ui/icons/CreditCard\";\r\n\r\nfunction Panel() {\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4} direction=\"row\" justify=\"space-around\">\r\n        <Grid xs={12} sm={4} item>\r\n          <MediaCard\r\n            title=\"Product\"\r\n            icon={<Product color=\"primary\" style={{ fontSize: 250 }} />}\r\n            form={<ProductForm />}\r\n          />\r\n        </Grid>\r\n        <Grid xs={12} sm={4} item>\r\n          <MediaCard\r\n            title=\"Order\"\r\n            icon={<Order color=\"primary\" style={{ fontSize: 250 }} />}\r\n            form={<OrderForm />}\r\n          />\r\n        </Grid>\r\n        <Grid xs={12} sm={4} item>\r\n          <MediaCard\r\n            title=\"User\"\r\n            icon={<User color=\"primary\" style={{ fontSize: 250 }} />}\r\n            form={<CustomerForm />}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={4} direction=\"row\" justify=\"space-around\">\r\n        <Grid xs={12} sm={4} item>\r\n          <MediaCard\r\n            title=\"Adress\"\r\n            icon={<Adress color=\"primary\" style={{ fontSize: 250 }} />}\r\n            form={<AdressForm />}\r\n          />\r\n        </Grid>\r\n        <Grid xs={12} sm={4} item>\r\n          <MediaCard\r\n            title=\"Credit Card\"\r\n            icon={<CreditCard color=\"primary\" style={{ fontSize: 250 }} />}\r\n            form={<CreditCardForm />}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Panel;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return <div>home</div>;\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Home from \"@material-ui/icons/Home\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Money from \"@material-ui/icons/MonetizationOn\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  topbar: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer({ children, links }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        color=\"secondary\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.topbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Online E-Commerce Database\r\n          </Typography>\r\n          <Button\r\n            component={Link}\r\n            to={links[3]}\r\n            endIcon={<AddIcon />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"auto\" }}\r\n          >\r\n            Insert Data\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          {[\"Products\", \"Customers\", \"Orders\"].map((text, idx) => (\r\n            <ListItem component={Link} to={links[idx]} button key={text}>\r\n              <ListItemIcon>\r\n                {idx === 0 ? (\r\n                  <Home color=\"primary\" />\r\n                ) : idx === 1 ? (\r\n                  <Person color=\"primary\" />\r\n                ) : (\r\n                  <Money color=\"primary\" />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Users from \"./routes/Users\";\nimport Orders from \"./routes/Orders\";\nimport Panel from \"./routes/Panel\";\nimport Home from \"./routes/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport MiniDrawer from \"./components/MaterialUiBased/MiniDrawer\";\n\nexport default function App() {\n  const [links] = useState([\"/\", \"/users\", \"/orders\", \"/panel\"]);\n  return (\n    <Router>\n      <div>\n        <MiniDrawer links={links}>\n          <Switch>\n            <Route path=\"/users\">\n              <Users />\n            </Route>\n            <Route path=\"/orders\">\n              <Orders />\n            </Route>\n            <Route path=\"/panel\">\n              <Panel />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </MiniDrawer>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}